name: 'bookstore-microservices'
services:
  catalog-db:
    image: postgres:16-alpine
    container_name: catalog-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "15432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 500m
  catalog-service:
    image: rameshkrishnan183/bookstore-catalog-service
    container_name: catalog-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_URL=jdbc:postgresql://catalog-db:5432/postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
    ports:
      - "8081:8081"
    restart: unless-stopped
    depends_on:
      catalog-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
  order-db:
    image: postgres:16-alpine
    container_name: order-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "25432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 500m

  bookstore-rabbitmq:
    image: rabbitmq:3.12.11-management
    container_name: bookstore-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 500m

  notifications-db:
    image: postgres:16-alpine
    container_name: notifications-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "35432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 500m

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  order-service:
    image: rameshkrishnan183/bookstore-order-service
    container_name: order-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - ORDERS_CATALOG_SERVICE_URL=http://api-gateway:8989/catalog
      - DB_URL=jdbc:postgresql://order-db:5432/postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - RABBITMQ_HOST=bookstore-rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - OAUTH2_SERVER_URL=http://keycloak:9191
      - SWAGGER_API_GATEWAY_URL=http://api-gateway:8989/orders
      - MANAGEMENT_TRACING_ENABLED=true
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://tempo:9411
    ports:
      - "8082:8082"
    restart: unless-stopped
    depends_on:
      order-db:
        condition: service_healthy
      bookstore-rabbitmq:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
